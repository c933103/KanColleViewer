//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.0
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Grabacr07.KanColleViewer.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("http://www.dmm.com/netgame/social/application/-/detail/=/app_id=854854/")]
        public global::System.Uri KanColleUrl {
            get {
                return ((global::System.Uri)(this["KanColleUrl"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("333")]
        public double UIContentHight {
            get {
                return ((double)(this["UIContentHight"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("9000")]
        public int FeatureBrowserEmulation {
            get {
                return ((int)(this["FeatureBrowserEmulation"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("body {\n    margin:0;\n    overflow:hidden\n}\n\n#ntg-recommend {\n    display: none;\n}" +
            "\n\n#game_frame {\n    position:fixed;\n    left:50%;\n    top:-16px;\n    margin-left" +
            ":-450px;\n    z-index:1;\n}")]
        public string OverrideStyleSheet {
            get {
                return ((string)(this["OverrideStyleSheet"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"(function(F,i,r,e,b,u,g,L,I,T,E){if(F.getElementById(b))return;E=F[i+'NS']&&F.documentElement.namespaceURI;E=E?F[i+'NS'](E,'script'):F[i]('script');E[r]('id',b);E[r]('src',I+g+T);E[r](b,u);(F[e]('head')[0]||F[e]('body')[0]).appendChild(E);E=new Image;E[r]('src',I+L);})(document,'createElement','setAttribute','getElementsByTagName','FirebugLite','4','firebug-lite.js','releases/lite/latest/skin/xp/sprite.png','https://getfirebug.com/','#startInNewWindow');")]
        public string FirebugLiteScript {
            get {
                return ((string)(this["FirebugLiteScript"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("(function() {{\nvar shockwaveSetQualityAndWModeReload = function(quality, wmode) {" +
            "{\n  var swf = document.getElementById(\'externalswf\');\n  if(swf == null) {{\n    s" +
            "etTimeout(function() {{\n      shockwaveSetQualityAndWModeReload(quality, wmode);" +
            "\n    }}, 1000);\n    return;\n  }}\n  var attrs = {{}};\n  var params = {{}};\n  if(s" +
            "wf.tagName.toLowerCase() === \"embed\") {{\n    for(var i = 0; i < swf.attributes.l" +
            "ength; i++) {{\n      params[swf.attributes[i].name.toLowerCase()] = swf.attribut" +
            "es[i].value;\n    }}\n  }} else if(swf.tagName.toLowerCase() === \"object\") {{\n    " +
            "for(var i = 0; i < swf.attributes.length; i++) {{\n      attrs[swf.attributes[i]." +
            "name.toLowerCase()] = swf.attributes[i].value;\n    }}\n    for(var i = 0; i < swf" +
            ".childNodes.length; i++) {{\n      if(swf.childNodes[i].nodeType !== 1) continue;" +
            "\n      if(swf.childNodes[i].tagName.toLowerCase() !== \"param\") continue;\n      i" +
            "f(!swf.childNodes[i].hasAttribute(\"name\")) continue;\n      if(!swf.childNodes[i]" +
            ".hasAttribute(\"value\")) continue;\n      params[swf.childNodes[i].getAttribute(\"n" +
            "ame\").toLowerCase()] = swf.childNodes[i].getAttribute(\"value\");\n    }}\n  }}\n  if" +
            "(quality.toLowerCase() !== \"default\") {{\n    params.quality = quality;\n  }}\n  if" +
            "(wmode.toLowerCase() !== \"default\") {{\n    params.wmode = wmode;\n  }}\n  var newN" +
            "ode;\n  if(swf.tagName.toLowerCase() === \"embed\") {{\n    newNode = document.creat" +
            "eElement(\"embed\");\n    for(var key in params) {{\n      if(params.hasOwnProperty(" +
            "key)) {{\n        newNode.setAttribute(key, params[key]);\n      }}\n    }}\n  }} el" +
            "se if(swf.tagName.toLowerCase() === \"object\") {{\n    newNode = document.createEl" +
            "ement(\"object\");\n    for(var key in attrs) {{\n      if(attrs.hasOwnProperty(key)" +
            ") {{\n        newNode.setAttribute(key, attrs[key]);\n      }}\n    }}\n    for(var " +
            "key in params) {{\n      if(params.hasOwnProperty(key)) {{\n        var paramNode " +
            "= document.createElement(\"param\");\n        paramNode.setAttribute(\"name\", key);\n" +
            "        paramNode.setAttribute(\"value\", params[key]);\n        newNode.appendChil" +
            "d(paramNode);\n      }}\n    }}\n  }}\n  newNode.style.zIndex = 1;\n  swf.parentNode." +
            "replaceChild(newNode, swf);\n}};\n\nvar shockwaveSetQualityAndWModeDispatch = funct" +
            "ion(quality, wmode) {{\n  var swf = document.getElementById(\'externalswf\');\n  if(" +
            "swf == null) {{\n    setTimeout(function() {{\n      window.shockwaveSetQualityAnd" +
            "WModeDispatch(quality, wmode);\n    }}, 1000);\n    return;\n  }}\n  if(quality.toLo" +
            "werCase() !== \"default\") {{\n    swf.Quality2 = quality;\n  }}\n  if(wmode.toLowerC" +
            "ase() !== \"default\") {{\n    swf.WMode = wmode;\n  }}\n  swf.style.zIndex = 1;\n}};\n" +
            "\nvar shockwaveSetQualityAndWModeIntercept = function(quality, wmode) {{\n  var or" +
            "igEmbedFlash = window.gadgets.flash.embedFlash;\n  gadgets.flash.embedFlash = fun" +
            "ction(url, container, version, params) {{\n    if(typeof(params) == \"undefined\") " +
            "params = {{}};\n    if(quality.toLowerCase() != \"default\") params.quality = quali" +
            "ty;\n    if(wmode.toLowerCase() != \"default\") params.wmode = wmode;\n    origEmbed" +
            "Flash(url, container, version, params);\n  }};\n}};\n\nshockwaveSetQualityAndWMode{0" +
            "}(\"{1}\", \"{2}\");\n}})();\n")]
        public string QualityScript {
            get {
                return ((string)(this["QualityScript"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<script type=\"text/javascript\" src=\"http://kancolleviewer.local/flash_quality.js\"" +
            "></script>")]
        public string InjectScriptTag {
            get {
                return ((string)(this["InjectScriptTag"]));
            }
        }
    }
}
